name: "CodeQL Security Analysis"

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    # Запускать каждый понедельник в 2:00 UTC
    - cron: '0 2 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # Необходимые права для CodeQL
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none
        - language: python
          build-mode: none
        # Если у тебя есть Java/Kotlin код (для React Native модулей):
        # - language: java-kotlin
        #   build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # Дополнительные пакеты запросов для лучшего анализа
        queries: +security-and-quality

    # Настройка Node.js для TypeScript/JavaScript
    - name: Setup Node.js
      if: matrix.language == 'javascript-typescript'
      uses: actions/setup-node@v4
      with:
        node-version: '22.19.0'
        cache: 'npm'

    # Установка зависимостей для JavaScript/TypeScript
    - name: Install JavaScript dependencies
      if: matrix.language == 'javascript-typescript'
      run: |
        npm ci
        # Если используешь Expo, устанавливаем и его
        npm install -g @expo/cli

    # Настройка Python
    - name: Setup Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.6'
        cache: 'pip'

    # Установка зависимостей Python
    - name: Install Python dependencies
      if: matrix.language == 'python'
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt

    # Настройка переменных окружения для Django
    - name: Setup Django environment
      if: matrix.language == 'python'
      run: |
        cd backend
        echo "SECRET_KEY=test-secret-key-for-codeql" > .env
        echo "DEBUG=False" >> .env
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> .env
        echo "DB_ENGINE=django.db.backends.sqlite3" >> .env
        echo "DB_NAME=:memory:" >> .env

    # Для autobuild (если понадобится)
    - name: Autobuild
      if: matrix.build-mode == 'autobuild'
      uses: github/codeql-action/autobuild@v3

    # Выполнение CodeQL анализа
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        # Загружаем результаты в SARIF для просмотра
        upload: true

    # Дополнительная проверка безопасности с помощью Semgrep (опционально)
    - name: Run Semgrep
      if: matrix.language == 'python' || matrix.language == 'javascript-typescript'
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
        generateSarif: "1"
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      continue-on-error: true

    # Проверка зависимостей на известные уязвимости
    - name: Run npm audit
      if: matrix.language == 'javascript-typescript'
      run: npm audit --audit-level=high
      continue-on-error: true

    - name: Run Python safety check
      if: matrix.language == 'python'
      run: |
        pip install safety
        cd backend
        safety check
      continue-on-error: true
