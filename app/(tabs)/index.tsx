import { ActionCard } from '@/components/ActionCard';
import { AnimatedHeader } from '@/components/AnimatedHeader';
import { CustomRefreshControl } from '@/components/CustomRefreshControl';
import { NewsCard } from '@/components/NewsCard';
import { ThemedText } from '@/components/ThemedText';
import { Colors } from '@/constants/DesignTokens';
import { useAppDispatch, useAppSelector } from '@/hooks/redux';
import { useResponsive } from '@/hooks/useResponsive';
import { fetchEvents } from '@/store/slices/eventsSlice';
import { fetchNews } from '@/store/slices/newsSlice';
import { Ionicons } from '@expo/vector-icons';
import React from 'react';
import { Dimensions, Pressable, ScrollView, View } from 'react-native';
import Animated, {
  FadeInDown,
  SlideInLeft,
  SlideInRight,
  useAnimatedScrollHandler,
  useSharedValue,
} from 'react-native-reanimated';
import { SafeAreaView } from 'react-native-safe-area-context';

const AnimatedScrollView = Animated.createAnimatedComponent(ScrollView);

export default function HomeScreen() {
  const dispatch = useAppDispatch();
  const scrollY = useSharedValue(0);
  const [refreshing, setRefreshing] = React.useState(false);
  const { horizontalPadding, cardGap, cardWidth, cardHeight } = useResponsive();
  const { user } = useAppSelector((state) => state.auth);

  const scrollHandler = useAnimatedScrollHandler({
    onScroll: (event) => {
      scrollY.value = event.contentOffset.y;
    },
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  React.useEffect(() => {
    if (user) {
      dispatch(fetchNews());
      dispatch(fetchEvents());
    }
  }, [dispatch, user]);

  const onRefresh = React.useCallback(async () => {
    setRefreshing(true);
    try {
      if (user) {
        await Promise.all([
          dispatch(fetchNews()).unwrap(),
          dispatch(fetchEvents()).unwrap()
        ]);
      }
    } catch (error) {
      console.log('Refresh error:', error);
    }
    setRefreshing(false);
  }, [dispatch, user]);

  // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è –∏–∑ Redux store
  const { items: newsData, isLoading: newsLoading } = useAppSelector((state) => state.news);
  const { items: eventsData, isLoading: eventsLoading } = useAppSelector((state) => state.events);

  // –ü–æ–ª—É—á–∞–µ–º –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è (—Å–ª–µ–¥—É—é—â–∏–µ 3)
  const upcomingEvents = React.useMemo(() => {
    const now = new Date();
    return eventsData
      .filter(event => new Date(event.date) >= now)
      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())
      .slice(0, 3);
  }, [eventsData]);

  // –ü–æ–ª—É—á–∞–µ–º –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
  const importantNews = React.useMemo(() => {
    return newsData.filter(news => news.isImportant).slice(0, 2);
  }, [newsData]);

  const screenWidth = Dimensions.get('window').width;

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
  const StatWidget = ({ icon, title, value, color }: {
    icon: keyof typeof Ionicons.glyphMap;
    title: string;
    value: string;
    color: string;
  }) => (
    <Animated.View 
      entering={FadeInDown.delay(200)}
      style={{
        backgroundColor: '#FFFFFF',
        borderRadius: 16,
        padding: 16,
        flex: 1,
        marginHorizontal: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 4 },
        shadowOpacity: 0.08,
        shadowRadius: 12,
        elevation: 6,
        borderLeftWidth: 4,
        borderLeftColor: color,
      }}
    >
      <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 8 }}>
        <View style={{
          backgroundColor: `${color}15`,
          width: 32,
          height: 32,
          borderRadius: 8,
          justifyContent: 'center',
          alignItems: 'center',
          marginRight: 8,
        }}>
          <Ionicons name={icon} size={18} color={color} />
        </View>
        <ThemedText style={{
          fontSize: 12,
          fontWeight: '600',
          color: '#64748B',
          textTransform: 'uppercase',
          letterSpacing: 0.5,
        }}>
          {title}
        </ThemedText>
      </View>
      <ThemedText style={{
        fontSize: 24,
        fontWeight: '700',
        color: '#1E293B',
      }}>
        {value}
      </ThemedText>
    </Animated.View>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
  const QuickEventCard = ({ event, index }: { event: any; index: number }) => (
    <Animated.View
      entering={SlideInRight.delay(400 + index * 100)}
      style={{
        backgroundColor: '#FFFFFF',
        borderRadius: 12,
        padding: 16,
        marginBottom: 12,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.06,
        shadowRadius: 8,
        elevation: 4,
        borderLeftWidth: 3,
        borderLeftColor: Colors.brandPrimary,
      }}
    >
      <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-start' }}>
        <View style={{ flex: 1 }}>
          <ThemedText style={{
            fontSize: 14,
            fontWeight: '600',
            color: '#1E293B',
            marginBottom: 4,
          }} numberOfLines={2}>
            {event.title}
          </ThemedText>
          <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 2 }}>
            <Ionicons name="calendar-outline" size={12} color="#64748B" />
            <ThemedText style={{
              fontSize: 12,
              color: '#64748B',
              marginLeft: 4,
            }}>
              {event.date}
            </ThemedText>
          </View>
          <View style={{ flexDirection: 'row', alignItems: 'center' }}>
            <Ionicons name="location-outline" size={12} color="#64748B" />
            <ThemedText style={{
              fontSize: 12,
              color: '#64748B',
              marginLeft: 4,
            }} numberOfLines={1}>
              {event.location}
            </ThemedText>
          </View>
        </View>
        <View style={{
          backgroundColor: '#F1F5F9',
          paddingHorizontal: 8,
          paddingVertical: 4,
          borderRadius: 6,
          marginLeft: 8,
        }}>
          <ThemedText style={{
            fontSize: 10,
            fontWeight: '600',
            color: '#475569',
            textTransform: 'uppercase',
          }}>
            {event.category}
          </ThemedText>
        </View>
      </View>
    </Animated.View>
  );

  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.surface }}>
      {/* –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å */}
      <AnimatedHeader 
        userName={user?.first_name || user?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
        notificationCount={3}
        onAvatarPress={() => console.log('Avatar pressed')}
        onNotificationPress={() => console.log('Notifications pressed')}
      />

              <AnimatedScrollView
        onScroll={scrollHandler}
        scrollEventThrottle={16}
        refreshControl={
          <CustomRefreshControl refreshing={refreshing} onRefresh={onRefresh} />
        }
        contentContainerStyle={{
          paddingHorizontal: horizontalPadding,
          paddingBottom: 100,
        }}
      >
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–µ–∫—Ü–∏—è —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
        <Animated.View
          entering={FadeInDown.delay(100)}
          style={{
            backgroundColor: Colors.brandPrimary,
            borderRadius: 20,
            padding: 24,
            marginBottom: 24,
            marginTop: 8,
          }}
        >
          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>
            <View style={{ flex: 1 }}>
              <ThemedText style={{
                fontSize: 18,
                fontWeight: '700',
                color: '#FFFFFF',
                marginBottom: 4,
              }}>
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.first_name || '–°—Ç—É–¥–µ–Ω—Ç'}! üëã
              </ThemedText>
              <ThemedText style={{
                fontSize: 14,
                color: '#E0E7FF',
                lineHeight: 20,
              }}>
                –ì–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤–æ–º—É –¥–Ω—é –æ–±—É—á–µ–Ω–∏—è?
              </ThemedText>
            </View>
            <View style={{
              backgroundColor: 'rgba(255,255,255,0.2)',
              borderRadius: 50,
              padding: 12,
            }}>
              <Ionicons name="school" size={24} color="#FFFFFF" />
            </View>
          </View>
        </Animated.View>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤–∏–¥–∂–µ—Ç—ã */}
        <View style={{
          flexDirection: 'row',
          marginBottom: 24,
          gap: 8,
        }}>
          <StatWidget 
            icon="book-outline" 
            title="–ö—É—Ä—Å—ã" 
            value="6" 
            color="#3B82F6" 
          />
          <StatWidget 
            icon="calendar-outline" 
            title="–°–æ–±—ã—Ç–∏—è" 
            value={eventsData.length.toString()} 
            color="#10B981" 
          />
          <StatWidget 
            icon="trophy-outline" 
            title="–ë–∞–ª–ª—ã" 
            value="95" 
            color="#F59E0B" 
          />
        </View>

        {/* –°–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ 2x2 */}
        <Animated.View
          entering={FadeInDown.delay(300)}
          style={{
            marginBottom: 32,
          }}
        >
          <ThemedText
            style={{
              fontSize: 18,
              lineHeight: 24,
              fontWeight: '700',
              color: '#1E293B',
              marginBottom: 16,
              fontFamily: 'Inter',
            }}
          >
            üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </ThemedText>
          <View
            style={{
              flexDirection: 'row',
              flexWrap: 'wrap',
              justifyContent: 'space-between',
              gap: cardGap,
            }}
          >
            <ActionCard
              title="COURSES"
              icon="book-outline"
              onPress={() => console.log('Courses pressed')}
              style={{ width: cardWidth, height: cardHeight }}
            />
            <ActionCard
              title="SCHEDULE"
              icon="calendar-outline"
              onPress={() => console.log('Schedule pressed')}
              style={{ width: cardWidth, height: cardHeight }}
            />
            <ActionCard
              title="ASSIGNMENTS"
              icon="list-outline"
              onPress={() => console.log('Assignments pressed')}
              style={{ width: cardWidth, height: cardHeight }}
            />
            <ActionCard
              title="GRADES"
              icon="analytics-outline"
              onPress={() => console.log('Grades pressed')}
              style={{ width: cardWidth, height: cardHeight }}
            />
          </View>
        </Animated.View>

        {/* –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è */}
        {upcomingEvents.length > 0 && (
          <Animated.View entering={SlideInLeft.delay(400)} style={{ marginBottom: 32 }}>
            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>
              <ThemedText
                style={{
                  fontSize: 18,
                  lineHeight: 24,
                  fontWeight: '700',
                  color: '#1E293B',
                  fontFamily: 'Inter',
                }}
              >
                üìÖ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è
              </ThemedText>
              <Pressable
                style={{
                  backgroundColor: '#F1F5F9',
                  paddingHorizontal: 12,
                  paddingVertical: 6,
                  borderRadius: 20,
                }}
                onPress={() => console.log('View all events')}
              >
                <ThemedText style={{
                  fontSize: 12,
                  fontWeight: '600',
                  color: Colors.brandPrimary,
                }}>
                  –í—Å–µ —Å–æ–±—ã—Ç–∏—è
                </ThemedText>
              </Pressable>
            </View>
            
            <View>
              {upcomingEvents.map((event, index) => (
                <QuickEventCard key={event.id} event={event} index={index} />
              ))}
            </View>
          </Animated.View>
        )}

        {/* –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ */}
        {importantNews.length > 0 && (
          <Animated.View entering={SlideInRight.delay(500)} style={{ marginBottom: 32 }}>
            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>
              <ThemedText
                style={{
                  fontSize: 18,
                  lineHeight: 24,
                  fontWeight: '700',
                  color: '#1E293B',
                  fontFamily: 'Inter',
                }}
              >
                ‚ö° –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
              </ThemedText>
              <Pressable
                style={{
                  backgroundColor: '#FEF3C7',
                  paddingHorizontal: 12,
                  paddingVertical: 6,
                  borderRadius: 20,
                }}
                onPress={() => console.log('View all news')}
              >
                <ThemedText style={{
                  fontSize: 12,
                  fontWeight: '600',
                  color: '#D97706',
                }}>
                  –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
                </ThemedText>
              </Pressable>
            </View>
            
            <View style={{ gap: 12 }}>
              {importantNews.map((news, index) => (
                <NewsCard
                  key={news.id}
                  title={news.title}
                  subtitle={news.subtitle}
                  date={news.date}
                  image={news.image}
                  events={news.events || []}
                  icon={news.icon}
                  index={index}
                  onPress={() => console.log(`Important news ${news.id} pressed`)}
                  onEventPress={(event) => console.log(`Event ${event.id} pressed from news ${news.id}`)}
                />
              ))}
            </View>
          </Animated.View>
        )}

        {/* –°–µ–∫—Ü–∏—è –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π */}
        <Animated.View entering={SlideInRight.delay(600)}>
          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>
            <ThemedText
              style={{
                fontSize: 18,
                lineHeight: 24,
                fontWeight: '700',
                color: '#1E293B',
                fontFamily: 'Inter',
              }}
            >
              üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
            </ThemedText>
            <View style={{
              backgroundColor: '#E0F2FE',
              paddingHorizontal: 10,
              paddingVertical: 4,
              borderRadius: 12,
            }}>
              <ThemedText style={{
                fontSize: 11,
                fontWeight: '600',
                color: '#0369A1',
              }}>
                {newsData.length} –Ω–æ–≤–æ—Å—Ç–µ–π
              </ThemedText>
            </View>
          </View>

          <View style={{ gap: 12 }}>
            {newsData.length > 0 ? (
              newsData.slice(0, 5).map((news, index) => (
                <NewsCard
                  key={news.id}
                  title={news.title}
                  subtitle={news.subtitle}
                  date={news.date}
                  image={news.image}
                  events={news.events || []}
                  icon={news.icon}
                  index={index}
                  onPress={() => console.log(`News ${news.id} pressed`)}
                  onEventPress={(event) => console.log(`Event ${event.id} pressed from news ${news.id}`)}
                />
              ))
            ) : (
              <View style={{
                backgroundColor: '#F8FAFC',
                borderRadius: 16,
                padding: 32,
                alignItems: 'center',
                borderWidth: 2,
                borderColor: '#E2E8F0',
                borderStyle: 'dashed',
              }}>
                <View style={{
                  backgroundColor: '#E2E8F0',
                  width: 60,
                  height: 60,
                  borderRadius: 30,
                  justifyContent: 'center',
                  alignItems: 'center',
                  marginBottom: 16,
                }}>
                  <Ionicons name="newspaper-outline" size={28} color="#64748B" />
                </View>
                <ThemedText style={{
                  fontSize: 16,
                  fontWeight: '600',
                  color: '#475569',
                  textAlign: 'center',
                  marginBottom: 8,
                }}>
                  –ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç
                </ThemedText>
                <ThemedText style={{
                  fontSize: 14,
                  color: '#94A3B8',
                  textAlign: 'center',
                  lineHeight: 20,
                }}>
                  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å{'\n'}–ø–µ—Ä–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
                </ThemedText>
              </View>
            )}
          </View>
        </Animated.View>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
        <Animated.View 
          entering={FadeInDown.delay(700)}
          style={{
            marginTop: 32,
            backgroundColor: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            borderRadius: 20,
            overflow: 'hidden',
          }}
        >
          <View style={{
            backgroundColor: '#4F46E5',
            padding: 24,
            borderRadius: 20,
          }}>
            <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 16 }}>
              <View style={{
                backgroundColor: 'rgba(255,255,255,0.2)',
                width: 48,
                height: 48,
                borderRadius: 24,
                justifyContent: 'center',
                alignItems: 'center',
                marginRight: 16,
              }}>
                <Ionicons name="bulb" size={24} color="#FFFFFF" />
              </View>
              <View style={{ flex: 1 }}>
                <ThemedText style={{
                  fontSize: 16,
                  fontWeight: '700',
                  color: '#FFFFFF',
                  marginBottom: 4,
                }}>
                  –°–æ–≤–µ—Ç –¥–Ω—è
                </ThemedText>
                <ThemedText style={{
                  fontSize: 12,
                  color: '#C7D2FE',
                }}>
                  –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
                </ThemedText>
              </View>
            </View>
            <ThemedText style={{
              fontSize: 14,
              lineHeight: 20,
              color: '#E0E7FF',
              fontStyle: 'italic',
            }}>
              "–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏–¥—Ç–∏ –æ—Ç –Ω–µ—É–¥–∞—á–∏ –∫ –Ω–µ—É–¥–∞—á–µ, –Ω–µ —Ç–µ—Ä—è—è —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞." 
              {'\n\n'}–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–º –∑–∞–Ω—è—Ç–∏—è–º!
            </ThemedText>
          </View>
        </Animated.View>

        {/* –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
        <Animated.View 
          entering={FadeInDown.delay(800)}
          style={{
            marginTop: 24,
            backgroundColor: '#FFFFFF',
            borderRadius: 16,
            padding: 20,
            shadowColor: '#000',
            shadowOffset: { width: 0, height: 4 },
            shadowOpacity: 0.08,
            shadowRadius: 12,
            elevation: 6,
          }}
        >
          <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>
            <Pressable style={{ alignItems: 'center' }}>
              <View style={{
                backgroundColor: '#FEE2E2',
                width: 40,
                height: 40,
                borderRadius: 20,
                justifyContent: 'center',
                alignItems: 'center',
                marginBottom: 8,
              }}>
                <Ionicons name="help-circle" size={20} color="#DC2626" />
              </View>
              <ThemedText style={{ fontSize: 12, color: '#64748B', fontWeight: '600' }}>
                –ü–æ–º–æ—â—å
              </ThemedText>
            </Pressable>
            
            <Pressable style={{ alignItems: 'center' }}>
              <View style={{
                backgroundColor: '#DBEAFE',
                width: 40,
                height: 40,
                borderRadius: 20,
                justifyContent: 'center',
                alignItems: 'center',
                marginBottom: 8,
              }}>
                <Ionicons name="chatbubble" size={20} color="#2563EB" />
              </View>
              <ThemedText style={{ fontSize: 12, color: '#64748B', fontWeight: '600' }}>
                –ß–∞—Ç
              </ThemedText>
            </Pressable>
            
            <Pressable style={{ alignItems: 'center' }}>
              <View style={{
                backgroundColor: '#D1FAE5',
                width: 40,
                height: 40,
                borderRadius: 20,
                justifyContent: 'center',
                alignItems: 'center',
                marginBottom: 8,
              }}>
                <Ionicons name="settings" size={20} color="#059669" />
              </View>
              <ThemedText style={{ fontSize: 12, color: '#64748B', fontWeight: '600' }}>
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏
              </ThemedText>
            </Pressable>
          </View>
        </Animated.View>
      </AnimatedScrollView>
    </SafeAreaView>
  );
}
